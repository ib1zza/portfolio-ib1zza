{
  "kanban": {
    "mini": "Совместный проект [https://github.com/pinchedmon(@pinchedmon)] и [https://github.com/ib1zza(@ib1zza)]. Проект сайта с функционалом создания канбан досок, предполагающий их совместное использование.",
    "base": "Совместный проект [https://github.com/pinchedmon(@pinchedmon)] и [https://github.com/ib1zza(@ib1zza)] <br/> Проект сайта с функционалом создания канбан досок, предполагающий их совместное использование несколькими пользователями (возможно даже одновременно). Возможность совместной работы обеспечивает использование Firebase Realtime Database. Для хранения данных используется Redux Toolkit. В проект интергирован Storybook. Для файловой структуры использована методология Feature Sliced Design. Тесты написаны с использованием библиотеки Jest."
  },
  "todo": {
    "mini": "Простой список задач с базовым функционалом: добавление, завершение, редактирование, удаление задач. Также присутствует список завершенных задач.",
    "base": "Простой список задач с базовым функционалом: добавление, завершение, редактирование, удаление задач. Также присутствует список завершенных задач."
  },
  "pizza": {
    "mini": "Веб-сайт для заказа пиццы. Присутствует функционал выборки пицц по категориям, поиска по названию, сортировки по популярности.",
    "base": "Веб-сайт для заказа пиццы. Присутствует функционал выборки пицц по категориям, поиска по названию, сортировки по популярности. Пиццы можно добавлять в корзину, каждый тип теста и размер пиццы имеет свою цену и добавляется в корзину как отдельный товар. Сайт корректно отображается на любом устройстве (320 - 4096)px."
  },
  "weather": {
    "mini": "Сайт для просмотра прогноза погоды. Для получения данных о погоде используется Openweathermap API.",
    "base": "Сайт для просмотра прогноза погоды. Для получения данных о погоде используется Openweathermap API. Присутствует функционал поиска города, вывода информации о погоде посуточно, либо в формате на каждые три часа. Также последние выбранные города сохраняются в localStorage и для быстрого доступа к истории можно использовать select, который находится в шапке сайта. Также присутствует функционал смены светлой и темной темы. Верстка является респонсивной и подстраивается под любой размер экрана."
  },
  "movies": {
    "mini": "Это приложение для поиска фильмов. Оно использует moviesdatabase из rapidapi.com для получения информации о фильмах.",
    "base": "Это приложение для поиска фильмов, построенное с использованием React, Redux-Toolkit и TypeScript. Оно использует moviesdatabase.p.rapidapi.com для получения информации о фильмах. В приложение присутствует широкий функционал по поиску фильмов, выборки по категории, дате выхода и жанру. Каждый фильм имеет свою страницу с подробностями о нем. Для сериалов также отображаются их серии по сезонам. Также присутствует функционал добавление фильма в избранное."
  },
  "chat": {
    "mini": "Веб-сайт с функционалом чата. Aутентификация и хранение данных о чатах и пользователях с использованием google firebase.",
    "base": "Веб-сайт с функционалом чата.  Aутентификация и хранение данных о чатах и пользователях с использованием google firebase.\nПрисутствует функционал регистрации и входа в аккаунт (с использованием почты / google аккаунта, поиска пользователей по username, отправки и получения сообщений в реальном времени, отправки файлов вместе с текстом, удаления чата для обоих пользователей, редактирования личной информации (username, avatar), смены темы приложения, смены языка (русский, english). Сайт корректно отображается на любом устройстве (320 - 4096)px."
  },
  "stellar-burgers": {
    "base": "Проектная работа Яндекс Практикума. Сайт конструктора бургеров с функционалом регистрации и входа в аккаунт, сборки своего бургера и оформления заказа. У пользователя есть личный кабинет, где хранятся все его заказы, присутствует возможность редактировать личные данные. В проекте применяется unit и e2e тестирование с использованием Jest и Cypress.",
    "mini": "Проектная работа Яндекс Практикума. Сайт конструктора бургеров с функционалом регистрации и входа в аккаунт."
  },
  "web-larek": {
    "mini": "Проектная работа Яндекс Практикума. Интернет магазин вымышленных товаров. Написан с использованием паттерна MVC на Typescript.",
    "base": "Проектная работа Яндекс Практикума. Интернет магазин вымышленных товаров. Написан с использованием паттерна MVC на Typescript. Взаимодействие слоя отображения (view) и слоя данных (model) осуществляется с помощью событий (класс EventEmitter). Присутствует валидация форм при оформлении заказа."
  },
  "me": {
    "heading": "Я Михаил, ",
    "headingTyping1": "Фронтенд разработчик",
    "headingTyping2": "Веб дизайнер",
    "headingTyping3": "ThreeJS разработчик",
    "subheading": "Я создаю вебсайты, используя современные инструменты разработки, и стараюсь развивать свои навыки, углубляясь в эту сферу.",
    "contactme": "Связаться со мной",
    "contactsText": "Я всегда открыт для предложений по совместной разработке! Мне нравится получать опыт командной работы над проектами. Если вы заинтересованы, напишите мне!",
    "messageMeHere": "Напишите мне здесь"
  },
  "links": {
    "home": "главная",
    "works": "проекты"
  },
  "global": {
    "projects": "проекты",
    "skills": "навыки",
    "contacts": "контакты",
    "media": "соц сети",
    "education": "образование"
  },
  "skills": {
    "languages": "языки",
    "frameworks": "фреймворки",
    "tools": "инструменты",
    "other": "другое"
  },
  "view": "перейти",
  "projects": {
    "stack": "Используемые технологии",
    "description": "Описание проекта",
    "wantToCheck": "Хотите посмотреть?",
    "viewDeployment": "перейти к проекту",
    "githubLink": "cсылка на github"
  }
}
